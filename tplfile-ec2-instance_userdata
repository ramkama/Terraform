#!/bin/bash

echo "###  Create Cloud-init lockfile  ###"
touch /tmp/cloud-init.running


echo "###  Prepare OS  ###"

echo "## Clean Yum Cache and Update Everything ##"
yum clean all
yum update -y

echo "## Enable EPEL Yum Repo ##"
yum install -y epel-release

echo "## Install Basic DevTools [ruby/python/wget/git] ##"
yum install -y ruby
yum install -y python-pip
yum install -y git
yum install -y wget

echo "###  Installation and Configuration of AWS Services and Tools  ###"

echo "## Configure AWS IAM User (EC2 Instance Root) Credentials"
mkdir -p /root/.aws/
touch /root/.aws/credentials
cat <<EOT >> /root/.aws/credentials
[default]
aws_access_key_id=${iamAccessKey}
aws_secret_access_key=${iamSecretKey}
EOT
touch /root/.aws/config
cat <<EOT >> /root/.aws/config
[default]
region=${activeRegion}
output=json
EOT


#cd /
#mkdir -p /aws.services/.aws/
#cd /aws.services/.aws/
#echo YOUR_AWS_ACCESS_KEY_HERE:YOUR_AWS_SECRET_KEY_HERE > /aws.services/.aws/.credentials
#chmod 600 /aws.services/.aws/.credentials


echo "## Install AWS CLi ##"
mkdir -p /aws.services/cli/
cd /aws.services/cli/
pip install awscli


echo "## Install and Configure AWS SSM Service Agent ##"
mkdir -p /aws.services/ssm/
cd /aws.services/ssm/
curl https://amazon-ssm-eu-west-1.s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm
yum install -y amazon-ssm-agent.rpm
systemctl enable amazon-ssm-agent.service
systemctl start amazon-ssm-agent.service
systemctl restart amazon-ssm-agent.service
systemctl status amazon-ssm-agent.service -l


echo "## Install and Configure AWS CodeDeploy Service Agent ##"
mkdir -p /aws.services/codedeploy/
cd /aws.services/codedeploy/
wget https://aws-codedeploy-eu-west-1.s3.amazonaws.com/latest/install
chmod +x ./install
./install auto
systemctl enable codedeploy-agent
systemctl start codedeploy-agent
systemctl restart codedeploy-agent
systemctl status codedeploy-agent -l


echo "## Install and Configure AWS Cloudwatch Log Monitoring Service Agent"
mkdir -p /aws.services/cloudwatch/
cd /aws.services/cloudwatch/
touch awslogs.conf
cat <<EOT >> /aws.services/cloudwatch/awslogs.conf
[general]
state_file = /var/awslogs/state/agent-state
EOT
wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
chmod +x ./awslogs-agent-setup.py
python ./awslogs-agent-setup.py --region eu-west-1 --non-interactive --configfile=/aws.services/cloudwatch/awslogs.conf
mkdir -p /var/awslogs/etc/config/


echo "##-- AWS Cloudwatch Log Monitoring Service Agent Configuration Files --##"

echo "## AWS Cloudwatch LogGroups: EC2 Instance"
touch /var/awslogs/etc/config/AWS.EC2-Instance.logs.conf

cat <<EOT >> /var/awslogs/etc/config/AWS.EC2-Instance.logs.conf
[AWS.EC2-Instance.Initialization.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/cloud-init.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Initialization.logs
[AWS.EC2-Instance.InitializationConsole.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/cloud-init-output.log
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.InitializationConsole.logs
[AWS.EC2-Instance.Messages.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/messages
log_stream_name = {instance_id}
log_group_name = AWS.EC2-Instance.Messages.logs
EOT

echo "## AWS Cloudwatch LogGroups: AWS Cloudwatch Service Agent"
touch /var/awslogs/etc/config/AWS-Cloudwatch.logs.conf

cat <<EOT >> /var/awslogs/etc/config/AWS-Cloudwatch.logs.conf
[AWS.Cloudwatch-Agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/awslogs.log
log_stream_name = {instance_id}
log_group_name = AWS.Cloudwatch-Agent.logs
[AWS.Cloudwatch-AgentInstallation.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/awslogs-agent-setup.log
log_stream_name = {instance_id}
log_group_name = AWS.Cloudwatch-AgentInstallation.logs
EOT

echo "## AWS Cloudwatch LogGroups: CodeDeploy Service Agent"
touch /var/awslogs/etc/config/AWS-CodeDeploy.logs.conf

cat <<EOT >> /var/awslogs/etc/config/AWS-CodeDeploy.logs.conf
[AWS.CodeDeploy-Agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/aws/codedeploy-agent/codedeploy-agent.log
log_stream_name = {instance_id}
log_group_name = AWS.CodeDeploy-Agent.logs
[AWS.CodeDeploy-Updater.logs]
file = /tmp/codedeploy-agent.update.log
log_stream_name = {instance_id}
log_group_name = AWS.CodeDeploy-Updater.logs
[AWS.CodeDeploy-Deployment.logs]
file = /opt/codedeploy-agent/deployment-root/deployment-logs/codedeploy-agent-deployments.log
log_stream_name = {instance_id}
log_group_name = AWS.CodeDeploy-Deployments.logs
EOT

echo "## AWS Cloudwatch LogGroups: SSM Service Agent"
touch /var/awslogs/etc/config/AWS-SSM.logs.conf

cat <<EOT >> /var/awslogs/etc/config/AWS-SSM.logs.conf
[AWS.SSM-Agent.logs]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/amazon/ssm/amazon-ssm-agent.log
log_stream_name = {instance_id}
log_group_name = AWS.SSM-Agent.logs
EOT


systemctl enable awslogs.service
systemctl start awslogs.service
systemctl restart awslogs.service
systemctl status awslogs.service -l



echo "###  Altering EC2 Instace ServiceStatus Tag FROM [EC2-Initialization-STARTed] TO [EC2-Initialization-ENDed]  ###"
aws ec2 delete-tags --resources $ec2InstaceID --tags Key=ServiceStatus,Value=EC2-Initialization-STARTed
aws ec2 create-tags --resources $ec2InstaceID --tags Key=ServiceStatus,Value=EC2-Initialization-ENDed

echo "###  Remove Cloud-init lockfile  ###"
rm -rf /tmp/cloud-init.running
